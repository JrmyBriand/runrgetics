% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sprint_bioenergetic_model.R
\name{sprint_bioenergetic_model_fit}
\alias{sprint_bioenergetic_model_fit}
\title{Fit Sprint Bioenergetic Model to Sprint Motion Data}
\usage{
sprint_bioenergetic_model_fit(
  sprint_motion_data,
  mu = -0.4,
  sigma = 1,
  k1 = 2.75,
  k2 = 35,
  maximal_aerobic_power = 24.5
)
}
\arguments{
\item{sprint_motion_data}{A tibble with the following columns: time (s), velocity (m/s), acceleration (m/s^2), distance (m), cost of running (J/kg/m) and power (W/kg).}

\item{mu}{A double. Parameter setting the peak of the log-normal distribution.Default is -0.4}

\item{sigma}{A double. Parameter setting the decay of the log-normal distribution. Default is 1}

\item{k1}{A double. Time constant of the first rising exponential (s). Default is 2.75}

\item{k2}{A double. Time constant of the second decaying exponential (s). Default is 35}

\item{maximal_aerobic_power}{A double. Maximal aerobic power (W/kg). Default is 24.5}
}
\value{
An object of class \code{nls} and \code{nls.lm}, as returned by \code{nlsLM()}. This object contains the fitted model and can be used with generic functions like \code{summary()}, \code{predict()}, and \code{coef()}.
}
\description{
Fit Sprint Bioenergetic Model to Sprint Motion Data
}
\examples{

# Extract Bolt's 100 m data from Graubner and Nixdorf data set.
bolt_100m <- graubner_nixdorf_sprints |>
  dplyr::filter(
    athlete == "Bolt",
    event == "Men's 100 m"
  )

# Compute sprint motion data

bolt_100m_motion_data <- sprint_motion_model_data(
  mean_velocity_splits = bolt_100m$velocity,
  time_splits = bolt_100m$splits,
  distance = bolt_100m$distance,
  reaction_time = bolt_100m$reaction_time[1],
  maximal_velocity = bolt_100m$maximal_velocity[1]
)

# Fit sprint bioenergetic model to sprint motion data

fit <- sprint_bioenergetic_model_fit(bolt_100m_motion_data)
fit

}
