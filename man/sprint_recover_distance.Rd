% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sprint_recover_motion_data.R
\name{sprint_recover_distance}
\alias{sprint_recover_distance}
\title{Recover Sprint Distance}
\usage{
sprint_recover_distance(
  power_series,
  dt = 0.01,
  costnning_flat = 3.6,
  slope_equation = "original"
)
}
\arguments{
\item{power_series}{a vector of power values (W/kg) corresponding to instantaneous power output during a sprint.}

\item{dt}{a numeric value representing the time step at which power is provided (in seconds). Default is 0.01 seconds.}

\item{slope_equation}{a string indicating the slope equation to use, either "original" or "extended". The "original" equation is based on the equation relating running at constant speed on different slopes porposed by Minetti et al. (2002), while the "extended" equation is based on similar equation for extended slopes proposed by Minetti and Pavei (2018).}
}
\value{
A numeric value representing the total distance covered during the sprint.
}
\description{
Recover Sprint Distance
}
\examples{
# Extract Bolt's 100 m data from Graubner and Nixdorf data set.
bolt_100m <- graubner_nixdorf_sprints |>
  dplyr::filter(
    athlete == "Bolt",
    event == "Men's 100 m"
  )

# Compute sprint motion data

bolt_100m_motion_data <- sprint_motion_model_data(
  mean_velocity_splits = bolt_100m$velocity,
  time_splits = bolt_100m$splits,
  distance = bolt_100m$distance,
  reaction_time = bolt_100m$reaction_time[1],
  maximal_velocity = bolt_100m$maximal_velocity[1]
)


# compute distance from sprint motion power series

recovered_distance <- sprint_recover_distance(bolt_100m_motion_data$power, dt = 0.01)

}
